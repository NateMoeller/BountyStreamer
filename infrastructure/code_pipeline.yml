AWSTemplateFormatVersion: 2010-09-09
Description: Infarstructure for StreamerContracts App
Parameters:
  GitHubRepoOwner:
    Type: String
    Description: ex - nckackerman
    Default: nckackerman
  GitHubRepoName:
    Type: String
    Description: ex - spring-hello-world
    Default: spring-hello-world
  GitHubRepoBranch:
    Type: String
    Description: ex - master
    Default: master
  GitHubRepoOAuthToken:
    Type: String
    Description: Generate a github personal access token (with least required privlidges) and paste its value in here. See - https://github.com/settings/tokens
  StreamerContractsEc2InstanceTags:
    Type: String
    Description: The EC2 tags that are already applied to EC2 instances that you want to include in the deployment group.
    Default: StreamerContracts

Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      RoleName: CodeBuildServiceRole
      Policies:
        - PolicyName: CodeBuildServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
                - !Sub arn:aws:logs:us-east-1:245271560881:log-group:/aws/codebuild/*
              Effect: Allow
            - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              Resource: "*"
              Effect: Allow
            - Action:
              - ssm:GetParameters
              Resource: arn:aws:ssm:us-east-1:245271560881:parameter/CodeBuild/*
              Effect: Allow

  StreamerContractsCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: StreamerContracts CodeBuild
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
      Name: StreamerContractsCodeBuild
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/build_spec.yml
      TimeoutInMinutes: 10

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
            Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      RoleName: CodeDeployServiceRole
      Policies:
        - PolicyName: CodeDeployServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Action:
              - autoscaling:CompleteLifecycleAction
              - autoscaling:DeleteLifecycleHook
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:PutLifecycleHook
              - autoscaling:RecordLifecycleActionHeartbeat
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:EnableMetricsCollection
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribePolicies
              - autoscaling:DescribeScheduledActions
              - autoscaling:DescribeNotificationConfigurations
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:SuspendProcesses
              - autoscaling:ResumeProcesses
              - autoscaling:AttachLoadBalancers
              - autoscaling:PutScalingPolicy
              - autoscaling:PutScheduledUpdateGroupAction
              - autoscaling:PutNotificationConfiguration
              - autoscaling:PutLifecycleHook
              - autoscaling:DescribeScalingActivities
              - autoscaling:DeleteAutoScalingGroup
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:TerminateInstances
              - tag:GetTags
              - tag:GetResources
              - sns:Publish
              - cloudwatch:DescribeAlarms
              - cloudwatch:PutMetricAlarm
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
              Resource: "*"
              Effect: Allow

  StreamerContractsCodeDeployWebApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: StreamerContractsCodeDeploy-Web
      ComputePlatform: Server

  StreamerContractsCodeDeployApiApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: StreamerContractsCodeDeploy-Api
      ComputePlatform: Server

  StreamerContractsCodeDeployWebDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref StreamerContractsCodeDeployWebApplication
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      DeploymentGroupName: StreamerContractsFleet-Web
      DeploymentStyle:
        DeploymentOption: WITHOUT_TRAFFIC_CONTROL
        DeploymentType: IN_PLACE
      Ec2TagFilters:
        - Type: VALUE_ONLY
          Value: !Sub ${StreamerContractsEc2InstanceTags}-Web
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

  StreamerContractsCodeDeployApiDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref StreamerContractsCodeDeployApiApplication
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      DeploymentGroupName: StreamerContractsFleet-Api
      DeploymentStyle:
        DeploymentOption: WITHOUT_TRAFFIC_CONTROL
        DeploymentType: IN_PLACE
      Ec2TagFilters:
        - Type: VALUE_ONLY
          Value: !Sub ${StreamerContractsEc2InstanceTags}-Api
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

  ArtifactStoreS3Location:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      # S3 bucket where codepipeline artifacts are stored. Must be lower case and unique across all S3 buckets.
      BucketName: codepipeline-artifacts-bucket-streamer-contracts
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      RoleName: CodePipelineServiceRole
      Policies:
        - PolicyName: CodePipelineServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Action:
              - s3:PutObject
              Resource: arn:aws:s3:::codepipeline*
              Effect: Allow
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - iam:PassRole
              Resource: "*"
              Effect: Allow

  StreamerContractsCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3Location
      DisableInboundStageTransitions:
        - StageName: Prod
          Reason: Transitions to PROD must be manually triggered
      Name: StreamerContractsPipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubRepoBranch
                OAuthToken: !Ref GitHubRepoOAuthToken
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: BuildAction-Web
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: 1
              Configuration:
                ProjectName: !Ref StreamerContractsCodeBuild
              OutputArtifacts:
            - Name: BuildAction-Api
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: 1
              Configuration:
                ProjectName: !Ref StreamerContractsCodeBuild
              OutputArtifacts:
                - Name: BuildOutput-Api
        - Name: Beta
          Actions:
            - Name: BetaDeployAction-Web
              RunOrder: 3
              InputArtifacts:
                - Name: BuildOutput-Web
              ActionTypeId:
                Category: Deploy
                Provider: CodeDeploy
                Owner: AWS
                Version: 1
              Configuration:
                ApplicationName: !Ref StreamerContractsCodeDeployWebApplication
                DeploymentGroupName: !Ref StreamerContractsCodeDeployWebDeploymentGroup
            - Name: BetaDeployAction-Api
              RunOrder: 3
              InputArtifacts:
                - Name: BuildOutput-Api
              ActionTypeId:
                Category: Deploy
                Provider: CodeDeploy
                Owner: AWS
                Version: 1
              Configuration:
                ApplicationName: !Ref StreamerContractsCodeDeployApiApplication
                DeploymentGroupName: !Ref StreamerContractsCodeDeployApiDeploymentGroup
        - Name: Prod
          Actions:
            - Name: ProdDeployAction-Web
              RunOrder: 4
              InputArtifacts:
                - Name: BuildOutput-Web
              ActionTypeId:
                Category: Deploy
                Provider: CodeDeploy
                Owner: AWS
                Version: 1
              Configuration:
                ApplicationName: !Ref StreamerContractsCodeDeployWebApplication
                DeploymentGroupName: !Ref StreamerContractsCodeDeployWebDeploymentGroup
            - Name: ProdDeployAction-Api
              RunOrder: 4
              InputArtifacts:
                - Name: BuildOutput-Api
              ActionTypeId:
                Category: Deploy
                Provider: CodeDeploy
                Owner: AWS
                Version: 1
              Configuration:
                ApplicationName: !Ref StreamerContractsCodeDeployApiApplication
                DeploymentGroupName: !Ref StreamerContractsCodeDeployApiDeploymentGroup